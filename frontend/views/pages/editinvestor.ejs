<%- include('../template/head') -%>
<body class="text-center">
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
        <%- include('../template/nav') -%>
        <main role="main" class="inner cover">
            <h1 class="cover-heading">Edit Investor Page</h1>
            <p>Edit the investor details below:</p>
            
            <div>
                <label for="firstname">First Name:</label>
                <input type="text" id="firstname" name="firstname" />
            </div>
            <div>
                <label for="lastname">Last Name:</label>
                <input type="text" id="lastname" name="lastname" />
            </div>
            <div style="margin-top: 20px;">
                <button onclick="updateInvestor()" class="btn btn-primary">Update Investor</button>
                <button onclick="deleteInvestor()" class="btn btn-danger">Delete Investor</button>
            </div>
        </main>
        <%- include('../template/footer') -%>
    </div>
</body>

</html>

<script>
    // Retrieve selected investor ID and name from local storage
    const investorId = localStorage.getItem('selectedInvestorId');
    const investorName = localStorage.getItem('selectedInvestor');

    // Fetch investor details on page load
    async function fetchInvestorDetails() {
        try {
            // This assumes you have a dedicated API to fetch investor by ID
            const response = await fetch(`/api/investor/${investorId}`);
            const investor = await response.json();

            // Populate input fields with the retrieved investor details
            document.getElementById('firstname').value = investor.firstname;
            document.getElementById('lastname').value = investor.lastname;
        } catch (error) {
            console.error("Error fetching investor details:", error);
        }
    }

    document.addEventListener("DOMContentLoaded", fetchInvestorDetails);

    // Handle updating an investor
    async function updateInvestor() {
    const firstname = document.getElementById('firstname').value;
    const lastname = document.getElementById('lastname').value;

    try {
        const response = await fetch('http://127.0.0.1:5000/api/investor', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                id: investorId, // Add id to the body
                firstname: firstname,
                lastname: lastname,
            }),
        });

        if (response.ok) {
            alert(`Investor "${investorName}" has been updated to "${firstname} ${lastname}".`);
        } else {
            const errorText = await response.text();
            console.error("Error response from server:", errorText);
            alert("Error updating investor.");
        }
    } catch (error) {
        console.error("Error updating investor:", error);
        alert("Error updating investor.");
    }
}


    // Handle deleting an investor
    async function deleteInvestor() {
    if (!confirm(`Are you sure you want to delete investor "${investorName}"?`)) {
        return; // Cancel deletion if user declines
    }

    try {
        const response = await fetch('http://127.0.0.1:5000/api/investor?id='+investorId, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: investorId }),
        });

        if (response.ok) {
            const result = await response.json();
            alert(`Investor "${investorName}" has been deleted.`);
            // Optionally redirect to another page after deletion
            window.location.href = '/investor'; // Change to your actual redirect route
        } else {
            const errorText = await response.text();
            console.error("Server responded with error:", errorText);
            alert("Error deleting investor.");
        }
    } catch (error) {
        console.error("Error deleting investor:", error);
        alert("Error deleting investor.");
    }
}

</script>